-- coreawin 연도별국가수 Query 
select publication_year, country_code, count(eid) from (
SELECT DISTINCT A.EID, A.PUBLICATION_YEAR, A.COUNTRY_CODE
FROM (
  SELECT distinct EID, PUBLICATION_YEAR, COUNTRY_CODE
  FROM NEON_2018_DOCUMENT_CN 
  WHERE EID IN (
      SELECT DISTINCT EID FROM NEON_2018_JOURNAL_TOP_1_DOC
  ) and
  country_code in ('USA', 'CHN', 'GBR', 'DEU', 'FRA', 'CAN', 'JPN', 'ITA', 'ESP', 'AUS', 'NLD', 'CHE', 'KOR', 'SWE', 'IND', 'BEL', 'TWN', 'DNK', 'BRA', 'AUT', 'SGP', 'ISR', 'HKG', 'FIN', 'NOR', 'POL', 'RUS', 'PRT', 'GRC', 'TUR')
) A ) Q
WHERE TO_NUMBER(PUBLICATION_YEAR) BETWEEN 2007 AND 2017
group by cube(publication_year, country_code)
order by publication_year, country_code;

 
 -- 1% 저널 연도별 국가 통계 수집 쿼리
DROP TABLE TMP_NJTD_1_COCT_ST CASCADE CONSTRAINTS PURGE;
CREATE TABLE TMP_NJTD_1_COCT_ST AS
SELECT DISTINCT A.EID, A.PUBLICATION_YEAR, A.COUNTRY_CODE
FROM (
  SELECT EID, PUBLICATION_YEAR, COUNTRY_CODE
  FROM NEON_2018_DOCUMENT_CN 
  WHERE EID IN (
      SELECT DISTINCT EID
      FROM NEON_2018_JOURNAL_TOP_DOCUMENT
      WHERE SOURCE_ID IN (
          SELECT JOURNAL_ID
          FROM NEON_2018_JOURNAL_TOPRATE
          WHERE TOPRATE <= 0.01
      )
  )
) A
WHERE A.EID IN (
    SELECT DISTINCT EID 
    FROM ( 
      SELECT EID, COUNT(COUNTRY_CODE) AS CNT
      FROM (
        SELECT DISTINCT EID, COUNTRY_CODE
        FROM NEON_2018_DOCUMENT_CN
      )
      GROUP BY EID
    ) 
    WHERE CNT >= 2
) AND PUBLICATION_YEAR BETWEEN '2007' AND '2017';

CREATE INDEX IDX_TN1CCST_EID ON TMP_NJTD_1_COCT_ST(EID);
CREATE INDEX IDX_TN1CCST_PY ON TMP_NJTD_1_COCT_ST(PUBLICATION_YEAR);
CREATE INDEX IDX_TN1CCST_CN ON TMP_NJTD_1_COCT_ST(COUNTRY_CODE);


 
-- 10% 저널 연도별 국가 통계 수집 쿼리- 공동연구 국가 건수
DROP TABLE TMP_NJTD_10_COCT_ST CASCADE CONSTRAINTS PURGE;
CREATE TABLE TMP_NJTD_10_COCT_ST AS
SELECT DISTINCT A.EID, A.PUBLICATION_YEAR, A.COUNTRY_CODE
FROM (
  SELECT EID, PUBLICATION_YEAR, COUNTRY_CODE
  FROM NEON_2018_DOCUMENT_CN 
  WHERE EID IN (
      SELECT DISTINCT EID
      FROM NEON_2018_JOURNAL_TOP_DOCUMENT
      WHERE SOURCE_ID IN (
          SELECT JOURNAL_ID
          FROM NEON_2018_JOURNAL_TOPRATE
          WHERE TOPRATE <= 0.1
      )
  )
) A
WHERE A.EID IN (
  SELECT DISTINCT EID 
  FROM ( 
    SELECT EID, COUNT(COUNTRY_CODE) AS CNT
   FROM (
      SELECT DISTINCT EID, COUNTRY_CODE
      FROM NEON_2018_DOCUMENT_CN
    )
    GROUP BY EID
  )
  WHERE CNT >= 2
) AND PUBLICATION_YEAR BETWEEN '2007' AND '2017';
CREATE INDEX IDX_TN10CCST_EID ON TMP_NJTD_10_COCT_ST(EID);
CREATE INDEX IDX_TN10CCST_PY ON TMP_NJTD_10_COCT_ST(PUBLICATION_YEAR);
CREATE INDEX IDX_TN10CCST_CN ON TMP_NJTD_10_COCT_ST(COUNTRY_CODE);

-- 저널 1% 교신저자 + 1저자 국가 건수
DROP TABLE TMP_NJTD_1_CORR_FAUCT_ST CASCADE CONSTRAINTS PURGE;
CREATE TABLE TMP_NJTD_1_CORR_FAUCT_ST AS
SELECT DISTINCT a.eid, b.publication_year, a.COUNTRY_CODE
FROM SCOPUS_2014_CORR_AUTHOR a
inner JOIN (
	SELECT DISTINCT EID, PUBLICATION_YEAR
    FROM TMP_NJTD_1_COCT_ST
) b
ON a.eid = b.eid
WHERE A.country_code IS NOT NULL
UNION
SELECT DISTINCT A.EID, a.PUBLICATION_YEAR, A.COUNTRY_CODE
FROM (
	SELECT DISTINCT A.EID, a.PUBLICATION_YEAR, A.COUNTRY_CODE
	FROM (
      SELECT DISTINCT A.EID, a.PUBLICATION_YEAR, C.COUNTRY_CODE
      FROM TMP_NJTD_1_COCT_ST A
      INNER JOIN (
        SELECT DISTINCT A.EID, NVL(B.COUNTRY_CODE, NVL(UPPER(A.COUNTRY_CODE), null)) AS COUNTRY_CODE
        FROM SCOPUS_2014_AFFILIATION A
        LEFT OUTER JOIN (
            SELECT AFID, COUNTRY_CODE
            FROM SCOPUS_KISTI_AFFILIATION 
        ) B
        ON A.AFID = B.AFID
        INNER JOIN (
            SELECT EID, GROUP_SEQUENCE, RANKING
            FROM SCOPUS_2014_AUTHOR
            WHERE RANKING = 1
        ) C
        ON A.EID = C.EID AND A.GROUP_SEQUENCE = C.GROUP_SEQUENCE
      ) C
      ON A.EID = C.EID
      WHERE A.EID IN (
        SELECT DISTINCT eid
        FROM SCOPUS_2014_CORR_AUTHOR
        WHERE country_code IS NULL	
      )
    ) A 
    WHERE A.COUNTRY_CODE IS NOT NULL
) A;

-- 저널 10% 교신저자 + 1저자 국가 건수
DROP TABLE TMP_NJTD_10_CORR_FAUCT_ST CASCADE CONSTRAINTS PURGE;
CREATE TABLE TMP_NJTD_10_CORR_FAUCT_ST AS
SELECT DISTINCT a.eid, b.publication_year, a.COUNTRY_CODE
FROM SCOPUS_2014_CORR_AUTHOR a
inner JOIN (
	SELECT DISTINCT EID, PUBLICATION_YEAR
    FROM TMP_NJTD_10_COCT_ST
) b
ON a.eid = b.eid
WHERE A.country_code IS NOT NULL
UNION
SELECT DISTINCT A.EID, a.PUBLICATION_YEAR, A.COUNTRY_CODE
FROM (
	SELECT DISTINCT A.EID, a.PUBLICATION_YEAR, A.COUNTRY_CODE
	FROM (
      SELECT DISTINCT A.EID, a.PUBLICATION_YEAR, C.COUNTRY_CODE
      FROM TMP_NJTD_10_COCT_ST A
      INNER JOIN (
        SELECT DISTINCT A.EID, NVL(B.COUNTRY_CODE, NVL(UPPER(A.COUNTRY_CODE), null)) AS COUNTRY_CODE
        FROM SCOPUS_2014_AFFILIATION A
        LEFT OUTER JOIN (
            SELECT AFID, COUNTRY_CODE
            FROM SCOPUS_KISTI_AFFILIATION 
        ) B
        ON A.AFID = B.AFID
        INNER JOIN (
            SELECT EID, GROUP_SEQUENCE, RANKING
            FROM SCOPUS_2014_AUTHOR
            WHERE RANKING = 1
        ) C
        ON A.EID = C.EID AND A.GROUP_SEQUENCE = C.GROUP_SEQUENCE
      ) C
      ON A.EID = C.EID
      WHERE A.EID IN (
        SELECT DISTINCT eid
        FROM SCOPUS_2014_CORR_AUTHOR
        WHERE country_code IS NULL	
      )
    ) A 
    WHERE A.COUNTRY_CODE IS NOT NULL
) A;
