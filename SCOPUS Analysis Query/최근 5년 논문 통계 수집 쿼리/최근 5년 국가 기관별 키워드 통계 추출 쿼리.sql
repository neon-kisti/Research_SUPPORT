	-- 최근 5년 키워드 20개 분야 랭크 상위 1000위에 대해서 특수문자, 공백 문자 처리를 통해 키워드 -국가 - 문서 ID 수집
	DROP TABLE SCOPUS_2017Y_5Y_AF_DOC CASCADE CONSTRAINTS PURGE;
	CREATE TABLE SCOPUS_2017Y_5Y_AF_DOC AS
     SELECT DISTINCT A.KEYWORD, A.EID, A.COUNTRY_CODE
     FROM (
       SELECT REGEXP_REPLACE(REGEXP_REPLACE(A.KEYWORD, '[[:punct:]]', ' '), '[[:space:]]{1,}', ' ') AS KEYWORD, A.EID, A.COUNTRY_CODE
       FROM (
         SELECT DISTINCT KEYWORD, EID, COUNTRY_CODE
         FROM SCOPUS_2017Y_5Y_CT_KEY_BASE
         WHERE KEYWORD IN ( 
         SELECT DISTINCT KEYWORD
             FROM SCOPUS_2017Y_5Y_KEY_RANKING
             WHERE L_ASJC_CODE IN ('1000', '1100',
                '1300', '1500',
                '1600', '1700',
                '1800', '1900',
                '2100', '2200',
                '2300', '2400',
                '2500', '2600',
                '2700', '2800',
                '3000', '3100',
                '3400', '3500'
            ) AND RANKING <= 1000
          ) A
       ) A
     );
     
     CREATE INDEX IDX_SAK_KW ON SCOPUS_2017Y_5Y_AF_DOC(KEYWORD);
     CREATE INDEX IDX_SAK_EID ON SCOPUS_2017Y_5Y_AF_DOC(EID);
     CREATE INDEX IDX_SAK_CT ON SCOPUS_2017Y_5Y_AF_DOC(COUNTRY_CODE);
     
     COMMENT ON TABLE SCOPUS_2017Y_5Y_AF_DOC IS '최근 5년간 국가별  저자 키워드 정보'; 

-- 최근 5년 국가 -기관별 저자키워드 문서 정보
DROP TABLE SCOPUS_2017Y_5Y_AFFIL_KEY CASCADE CONSTRAINTS PURGE;
CREATE TABLE SCOPUS_2017Y_5Y_AFFIL_KEY AS 
SELECT DISTINCT A.KEYWORD, A.COUNTRY_CODE, A.EID, B.AFFILIATION
FROM SCOPUS_2017Y_5Y_AF_DOC A
INNER JOIN  (
    SELECT DISTINCT EID, COUNTRY_CODE, AFFILIATION
    FROM SCOPUS_2016_AFFIL_FULL
) B
ON A.EID = B.EID
AND A.COUNTRY_CODE = B.COUNTRY_CODE;


CREATE INDEX IDX_AFF_KEY_KW ON SCOPUS_2017Y_5Y_AFFIL_KEY(KEYWORD);
CREATE INDEX IDX_AFF_KEY_EID ON SCOPUS_2017Y_5Y_AFFIL_KEY(EID);
CREATE INDEX IDX_AFF_KEY_CT ON SCOPUS_2017Y_5Y_AFFIL_KEY(COUNTRY_CODE);
CREATE INDEX IDX_AFF_KEY_AFFIL ON SCOPUS_2017Y_5Y_AFFIL_KEY(AFFILIATION);

-- 최근 5년 국가 -기관별 저자키워드 문서 건수
DROP TABLE SCOPUS_2017Y_5Y_AFFIL_KEY_ST CASCADE CONSTRAINTS PURGE;
CREATE TABLE SCOPUS_2017Y_5Y_AFFIL_KEY_ST AS
SELECT DISTINCT KEYWORD, COUNTRY_CODE, AFFILIATION, COUNT(DISTINCT EID) AS DOC_CNT
FROM SCOPUS_2017Y_5Y_AFFIL_KEY
GROUP BY KEYWORD, COUNTRY_CODE, AFFILIATION
ORDER BY COUNTRY_CODE, KEYWORD, DOC_CNT DESC;

CREATE INDEX IDX_AFF_KEY_ST_CT ON SCOPUS_2017Y_5Y_AFFIL_KEY_ST(COUNTRY_CODE);