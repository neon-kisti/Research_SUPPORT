/* 
 SCOPUS 기관의 국가, 기관의 명칭을 전거기관 명칭으로 대체해기 위한 쿼리
 [2017.09.07] 변경사항
	- 논문의 국가간 Fractional count 방식을 적용하기 위해 SCOPUS 전거기관 대체 수집 쿼리 생성시 SCOPUS 기관 정보에서
*/
DROP TABLE SCOPUS_2016_AFFIL_FULL CASCADE CONSTRAINTS PURGE;
create table SCOPUS_2016_AFFIL_FULL nologging as
SELECT DISTINCT A.EID, NVL(B.AFID, A.AFID) AS AFID, NVL(B.AFFILIATION, A.AFFILIATION) AS AFFILIATION, NVL(B.COUNTRY_CODE, UPPER(NVL(A.COUNTRY_CODE, 'NONE'))) AS COUNTRY_CODE
FROM SCOPUS_2014_AFFILIATION A
LEFT OUTER JOIN SCOPUS_KISTI_AFFILIATION B
ON A.AFID = B.AFID;

create index IDX_SCOPUS_2016_AFFIL_EID on SCOPUS_2016_AFFIL_FULL(EID) nologging;
create index IDX_SCOPUS_2016_AFFIL_AFID on SCOPUS_2016_AFFIL_FULL(AFID) nologging;
create index IDX_SCOPUS_2016_AFFIL_CT on SCOPUS_2016_AFFIL_FULL(COUNTRY_CODE) nologging;

-- 최근 10년간 발표된 논문, 컨퍼런스 페이퍼, 리뷰 정보 수집하는 쿼리
DROP TABLE SCOPUS_2017_DOCUMENT CASCADE CONSTRAINTS PURGE;
CREATE TABLE SCOPUS_2017_DOCUMENT nologging AS 
SELECT EID, PUBLICATION_YEAR, TITLE, CITATION_TYPE, SOURCE_ID, DOI, CIT_COUNT, REF_COUNT
FROM SCOPUS_2014_DOCUMENT
WHERE PUBLICATION_YEAR BETWEEN '2007' AND '2016'
AND CITATION_TYPE IN ('ar', 'cp', 're');
COMMENT ON TABLE SCOPUS.SCOPUS_2017_DOCUMENT IS '최근 10년 논문 정보';
CREATE INDEX IDX_SUB_DOC_EID ON SCOPUS_2017_DOCUMENT (EID) nologging;
CREATE INDEX IDX_SUB_DOC_PY ON SCOPUS_2017_DOCUMENT (PUBLICATION_YEAR) nologging;
CREATE INDEX IDX_SUB_DOC_CT ON SCOPUS_2017_DOCUMENT (CITATION_TYPE) nologging;
CREATE INDEX IDX_SUB_DOC_CC ON SCOPUS_2017_DOCUMENT (CIT_COUNT) nologging;
CREATE INDEX IDX_SUB_RC ON SCOPUS_2017_DOCUMENT (REF_COUNT) nologging;
CREATE INDEX IDX_SUB_DOI ON SCOPUS_2017_DOCUMENT (DOI) nologging;


/*
   최근 10년간의 논문 ID, 논문의 연도, 대분류, 국가 정보 수집 쿼리
    - 국가코드는 중복을 포함하여 수집
	- 논문의 Fractional Count 방식의 피인용수와 논문건수를 계산할떄 실제 논문의 국가의 총건수, 논문의 국가별 건수 수집을 위해 사용.
*/	
DROP TABLE SCOPUS_2017_AFF_CT_EID CASCADE CONSTRAINTS PURGE;
CREATE TABLE SCOPUS_2017_AFF_CT_EID NOLOGGING AS
SELECT DOC_INFO.EID, DOC_INFO.PUBLICATION_YEAR, LARGE_ASJC.L_ASJC_CODE, DECODE(NVL(AFF_INFO.COUNTRY_CODE, 'NONE'), '.', 'NONE', NVL(AFF_INFO.COUNTRY_CODE, 'NONE')) AS COUNTRY_CODE
FROM SCOPUS_2017_DOCUMENT DOC_INFO
LEFT OUTER JOIN(
	SELECT EID, COUNTRY_CODE
	FROM SCOPUS_2016_AFFIL_FULL
) AFF_INFO
ON DOC_INFO.EID = AFF_INFO.EID
LEFT OUTER JOIN (
  SELECT DISTINCT EID, DECODE(ASJC_CODE, NULL, 'NONE',(SUBSTR(ASJC_CODE,1,2) ||'00')) AS L_ASJC_CODE 
  FROM SCOPUS_2014_CLASS_ASJC 
) LARGE_ASJC
ON DOC_INFO.EID = LARGE_ASJC.EID;

COMMENT ON TABLE SCOPUS_2017_AFF_CT_EID IS '최근 10년 간 논문의 기관 국가 중복 허용 수집';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_EID.EID IS '문헌 EID';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_EID.PUBLICATION_YEAR IS '발행연도';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_EID.L_ASJC_CODE IS 'ASJC 대분류 코드';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_EID.COUNTRY_CODE IS '국가코드';

CREATE INDEX IDX_SCOPUS_AFFCT_CT ON SCOPUS_2017_AFF_CT_EID(COUNTRY_CODE) NOLOGGING;
CREATE INDEX IDX_SCOPUS_AFFCT_EID ON SCOPUS_2017_AFF_CT_EID(EID) NOLOGGING;
CREATE INDEX IDX_SCOPUS_AFFCT_YEAR ON SCOPUS_2017_AFF_CT_EID(PUBLICATION_YEAR) NOLOGGING;
CREATE INDEX IDX_SCOPUS_AFFCT_LASJC ON SCOPUS_2017_AFF_CT_EID(L_ASJC_CODE) NOLOGGING;

/*
   최근 10년간의 논문 ID, 논문의 연도, 대분류, 국가 정보, 피인용 수 수집
    - SCOPUS 기관의 국가정보 수집시 논문 1건의 기관의 국가정보의 중복을 베제하고 수집.
*/	
DROP TABLE SCOPUS_2017_UNIQ_AFF_CT_EID CASCADE CONSTRAINTS PURGE;
CREATE TABLE SCOPUS_2017_UNIQ_AFF_CT_EID NOLOGGING AS
SELECT DOC_INFO.EID, DOC_INFO.PUBLICATION_YEAR, LARGE_ASJC.L_ASJC_CODE, DECODE(NVL(AFF_INFO.COUNTRY_CODE, 'NONE'), '.', 'NONE', NVL(AFF_INFO.COUNTRY_CODE, 'NONE')) AS COUNTRY_CODE, DOC_INFO.CIT_COUNT
FROM SCOPUS_2017_DOCUMENT DOC_INFO
LEFT OUTER JOIN(
	SELECT DISTINCT EID, COUNTRY_CODE
	FROM SCOPUS_2016_AFFIL_FULL
) AFF_INFO
ON DOC_INFO.EID = AFF_INFO.EID
LEFT OUTER JOIN (
  SELECT DISTINCT EID, DECODE(ASJC_CODE, NULL, 'NONE',(SUBSTR(ASJC_CODE,1,2) ||'00')) AS L_ASJC_CODE 
  FROM SCOPUS_2014_CLASS_ASJC 
) LARGE_ASJC
ON DOC_INFO.EID = LARGE_ASJC.EID;

COMMENT ON TABLE SCOPUS_2017_UNIQ_AFF_CT_EID IS '최근 10년 간 논문의 기관 국가 Record 분석을 위한 데이터 수집';
COMMENT ON COLUMN SCOPUS_2017_UNIQ_AFF_CT_EID.EID IS '문헌 EID';
COMMENT ON COLUMN SCOPUS_2017_UNIQ_AFF_CT_EID.PUBLICATION_YEAR IS '발행연도';
COMMENT ON COLUMN SCOPUS_2017_UNIQ_AFF_CT_EID.L_ASJC_CODE IS 'ASJC 대분류 코드';
COMMENT ON COLUMN SCOPUS_2017_UNIQ_AFF_CT_EID.COUNTRY_CODE IS '국가코드';
COMMENT ON COLUMN SCOPUS_2017_UNIQ_AFF_CT_EID.CIT_COUNT IS '피인용 수';

CREATE INDEX IDX_SCOPUS_UAFFCT_CT ON SCOPUS_2017_UNIQ_AFF_CT_EID(COUNTRY_CODE) NOLOGGING;
CREATE INDEX IDX_SCOPUS_UAFFCT_EID ON SCOPUS_2017_UNIQ_AFF_CT_EID(EID) NOLOGGING;
CREATE INDEX IDX_SCOPUS_UAFFCT_YEAR ON SCOPUS_2017_UNIQ_AFF_CT_EID(PUBLICATION_YEAR) NOLOGGING;
CREATE INDEX IDX_SCOPUS_UAFFCT_CITCNT ON SCOPUS_2017_UNIQ_AFF_CT_EID(CIT_COUNT) NOLOGGING;
CREATE INDEX IDX_SCOPUS_UAFFCT_LASJC ON SCOPUS_2017_UNIQ_AFF_CT_EID(L_ASJC_CODE) NOLOGGING;

-- 한국 논문에 대해서 Fractional count 방식을 적용한  총피인용수, 문헌수(1 / (지정 국가수 / 전체 국가수) 수집 테이블
-- E.G. 미국 2건, 한국 3건, 일본 5건 -> 미국 : 1 * (2/10)건, 한국 : 1 * (3/10)건, 일본 : 1 * (5/10)건 
DROP TABLE SCOPUS_2017_AFF_CT_STAT_KOR CASCADE CONSTRAINTS PURGE;
CREATE TABLE SCOPUS_2017_AFF_CT_STAT_KOR as
SELECT DISTINCT 
	U.EID,
	U.PUBLICATION_YEAR,
    U.L_ASJC_CODE AS ASJC_CODE,
    U.COUNTRY_CODE,
    (1 * (F_CT_CNT.COUNTRY_CNT / F_CT_CNT.COUNRY_TOTAL_CNT)) AS DOC_CNT, 
    (U.CIT_COUNT * (F_CT_CNT.COUNTRY_CNT / F_CT_CNT.COUNRY_TOTAL_CNT)) AS CIT_CNT
FROM SCOPUS_2017_UNIQ_AFF_CT_EID U
INNER JOIN (
    SELECT STATS.EID, STATS.PUBLICATION_YEAR, STATS.L_ASJC_CODE AS ASJC_CODE, STATS.COUNTRY_CODE, STATS.COUNRY_TOTAL_CNT, COUNT (STATS.COUNTRY_CODE) AS COUNTRY_CNT
    FROM (
        SELECT COUNTRY_STATS.EID, COUNTRY_STATS.PUBLICATION_YEAR, COUNTRY_STATS.L_ASJC_CODE, COUNTRY_STATS.COUNTRY_CODE, S_STATS.CT_CNT AS COUNRY_TOTAL_CNT                       
        FROM  SCOPUS_2017_AFF_CT_EID COUNTRY_STATS
        INNER JOIN (
			SELECT SK.EID, SK.PUBLICATION_YEAR, SK.L_ASJC_CODE AS ASJC_CODE, COUNT(SK.COUNTRY_CODE) AS CT_CNT
            FROM SCOPUS_2017_AFF_CT_EID SK 
            GROUP BY SK.EID, SK.PUBLICATION_YEAR, SK.L_ASJC_CODE
        ) S_STATS
        ON 	S_STATS.EID = COUNTRY_STATS.EID 
        AND S_STATS.PUBLICATION_YEAR = COUNTRY_STATS.PUBLICATION_YEAR 
        AND S_STATS.ASJC_CODE = COUNTRY_STATS.L_ASJC_CODE
    ) STATS
    GROUP BY STATS.EID, STATS.PUBLICATION_YEAR, STATS.L_ASJC_CODE, STATS.COUNTRY_CODE, STATS.COUNRY_TOTAL_CNT
) F_CT_CNT 
ON U.EID = F_CT_CNT.EID
AND U.PUBLICATION_YEAR = F_CT_CNT.PUBLICATION_YEAR
AND U.L_ASJC_CODE = F_CT_CNT.ASJC_CODE
AND U.COUNTRY_CODE = F_CT_CNT.COUNTRY_CODE
WHERE U.COUNTRY_CODE = 'KOR';
    
COMMENT ON TABLE SCOPUS_2017_AFF_CT_STAT_KOR IS '최근 10년 한국 논문 전체 통계 수집 (논문수, 피인용 수 수집시 국가별 Fractional count 방식을 적용)';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_STAT_KOR.EID IS '문헌 EID';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_STAT_KOR.PUBLICATION_YEAR IS '발행연도';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_STAT_KOR.ASJC_CODE IS 'ASJC 분류 코드';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_STAT_KOR.COUNTRY_CODE IS '국가코드';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_STAT_KOR.DOC_CNT IS '문헌 수 (국가별 Fractional count 방식을 적용)';
COMMENT ON COLUMN SCOPUS_2017_AFF_CT_STAT_KOR.CIT_CNT IS '피인용 수 (국가별 Fractional count 방식을 적용)';

CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_EID ON SCOPUS_2017_AFF_CT_STAT_KOR(EID) NOLOGGING;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_YEAR ON SCOPUS_2017_AFF_CT_STAT_KOR(PUBLICATION_YEAR) NOLOGGING;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_CITCNT ON SCOPUS_2017_AFF_CT_STAT_KOR(CIT_CNT) NOLOGGING;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_CT ON SCOPUS_2017_AFF_CT_STAT_KOR(COUNTRY_CODE) NOLOGGING;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_DCNT ON SCOPUS_2017_AFF_CT_STAT_KOR(DOC_CNT) NOLOGGING;
CREATE INDEX IDX_SCOPUS_AFCT_STAT_K_ASJC ON SCOPUS_2017_AFF_CT_STAT_KOR(ASJC_CODE) NOLOGGING;
    
/*
	한국과 공동연구한 국가들의 대해서 Fractional count 방식을 적용한  총피인용수, 문헌수(1 / (지정 국가수 / 전체 국가수) 수집 테이블
	E.G. 미국 2건, 한국 3건, 일본 5건 -> 미국 : 1 * (2/10)건, 한국 : 1 * (3/10)건, 일본 : 1 * (5/10)건 
*/   
DROP TABLE SCOPUS_2017_CO_RES_AFF_CT_KOR CASCADE CONSTRAINTS PURGE;
CREATE TABLE SCOPUS_2017_CO_RES_AFF_CT_KOR as
SELECT DISTINCT 
	U.EID,
	U.PUBLICATION_YEAR,
    U.L_ASJC_CODE AS ASJC_CODE,
    U.COUNTRY_CODE,
    (1 * (F_CT_CNT.COUNTRY_CNT / F_CT_CNT.COUNRY_TOTAL_CNT)) AS DOC_CNT, 
    (U.CIT_COUNT * (F_CT_CNT.COUNTRY_CNT / F_CT_CNT.COUNRY_TOTAL_CNT)) AS CIT_CNT
FROM SCOPUS_2017_UNIQ_AFF_CT_EID U
INNER JOIN (
	SELECT DISTINCT A.EID, A.COUNTRY_CODE AS COUNTRY_CODE
    FROM SCOPUS_2017_UNIQ_AFF_CT_EID A
    INNER JOIN (
        SELECT A.EID
        FROM (
            SELECT EID, COUNT(DISTINCT COUNTRY_CODE) CNT
            FROM SCOPUS_2017_UNIQ_AFF_CT_EID
            GROUP BY EID
        ) A
        WHERE A.CNT >= 2
    ) C
    ON A.EID = C.EID
    WHERE A.COUNTRY_CODE = 'KOR'
) CO_CT_EID
ON U.EID = CO_CT_EID.EID
INNER JOIN (
    SELECT STATS.EID, STATS.PUBLICATION_YEAR, STATS.L_ASJC_CODE AS ASJC_CODE, STATS.COUNTRY_CODE, STATS.COUNRY_TOTAL_CNT, COUNT (STATS.COUNTRY_CODE) AS COUNTRY_CNT
    FROM (
        SELECT COUNTRY_STATS.EID, COUNTRY_STATS.PUBLICATION_YEAR, COUNTRY_STATS.L_ASJC_CODE, COUNTRY_STATS.COUNTRY_CODE, S_STATS.CT_CNT AS COUNRY_TOTAL_CNT                       
        FROM  SCOPUS_2017_AFF_CT_EID COUNTRY_STATS
        INNER JOIN (
			SELECT SK.EID, SK.PUBLICATION_YEAR, SK.L_ASJC_CODE AS ASJC_CODE, COUNT(SK.COUNTRY_CODE) AS CT_CNT
            FROM SCOPUS_2017_AFF_CT_EID SK 
            GROUP BY SK.EID, SK.PUBLICATION_YEAR, SK.L_ASJC_CODE
        ) S_STATS
        ON S_STATS.EID = COUNTRY_STATS.EID 
        AND S_STATS.PUBLICATION_YEAR = COUNTRY_STATS.PUBLICATION_YEAR 
        AND S_STATS.ASJC_CODE = COUNTRY_STATS.L_ASJC_CODE
    ) STATS
    GROUP BY STATS.EID, STATS.PUBLICATION_YEAR, STATS.L_ASJC_CODE, STATS.COUNTRY_CODE, STATS.COUNRY_TOTAL_CNT
) F_CT_CNT 
ON U.EID = F_CT_CNT.EID
AND U.PUBLICATION_YEAR = F_CT_CNT.PUBLICATION_YEAR
AND U.L_ASJC_CODE = F_CT_CNT.ASJC_CODE
AND U.COUNTRY_CODE = F_CT_CNT.COUNTRY_CODE
WHERE U.COUNTRY_CODE <> 'KOR';
    
COMMENT ON TABLE SCOPUS_2017_CO_RES_AFF_CT_KOR IS '최근 10년 한국과 공동연구한 논문 통계 수집 (논문수, 피인용 수 수집시 국가별 Fractional count 방식을 적용)';
COMMENT ON COLUMN SCOPUS_2017_CO_RES_AFF_CT_KOR.EID IS '문헌 EID';
COMMENT ON COLUMN SCOPUS_2017_CO_RES_AFF_CT_KOR.PUBLICATION_YEAR IS '발행연도';
COMMENT ON COLUMN SCOPUS_2017_CO_RES_AFF_CT_KOR.ASJC_CODE IS 'ASJC 분류 코드';
COMMENT ON COLUMN SCOPUS_2017_CO_RES_AFF_CT_KOR.COUNTRY_CODE IS '국가코드';
COMMENT ON COLUMN SCOPUS_2017_CO_RES_AFF_CT_KOR.DOC_CNT IS '문헌 수 (국가별 Fractional count 방식을 적용)';
COMMENT ON COLUMN SCOPUS_2017_CO_RES_AFF_CT_KOR.CIT_CNT IS '피인용 수 (국가별 Fractional count 방식을 적용)';

CREATE INDEX IDX_SCOPUS_CORES_AFCT_K_EID ON SCOPUS_2017_CO_RES_AFF_CT_KOR(EID) NOLOGGING;
CREATE INDEX IDX_SCOPUS_CORES_AFCT_K_YEAR ON SCOPUS_2017_CO_RES_AFF_CT_KOR(PUBLICATION_YEAR) NOLOGGING;
CREATE INDEX IDX_SCOPUS_CORES_AFCT_K_CCNT ON SCOPUS_2017_CO_RES_AFF_CT_KOR(CIT_CNT) NOLOGGING;
CREATE INDEX IDX_SCOPUS_CORES_AFCT_K_CT ON SCOPUS_2017_CO_RES_AFF_CT_KOR(COUNTRY_CODE) NOLOGGING;
CREATE INDEX IDX_SCOPUS_CORES_AFCT_K_DCNT ON SCOPUS_2017_CO_RES_AFF_CT_KOR(DOC_CNT) NOLOGGING;
CREATE INDEX IDX_SCOPUS_CORES_AFCT_K_ASJC ON SCOPUS_2017_CO_RES_AFF_CT_KOR(ASJC_CODE) NOLOGGING;